<?xml version="1.0"?>

<launch>

  <!-- send urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find udacity_bot)/urdf/udacity_bot.xacro'" />
  

    <!--spawn a robot in gazebo world-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" clear_params="true" output="screen" args="-urdf -param robot_description -model udacity_bot" />
    
    
    
    

    <include file="$(find udacity_bot)/launch/udacity_world.launch"/>
        <!--<arg name="model" value="$(find udacity_bot/"/>-->

    <!-- Map Server -->
    <!-- Loads the provided map -->
    <arg name="map_file" default="$(find udacity_bot)/maps/jackal_race.yaml"/>
    <node pkg="map_server" type="map_server" name="map_server" args="$(arg map_file)" clear_params="true" />



    <!-- Launches AMCL node to perform localization -->
    <node pkg="amcl" type="amcl" name="amcl" clear_params="true" output="screen">
        <!--Remapping AMCL's laser data param to the topic our bot publishes to-->
        <remap from="scan" to="udacity_bot/laser/scan"/>
        <!-- Specifying type of wheel control -->
        <param name="odom_model_type" value="diff-corrected"/>
        <!-- Assigning the necessary reference frames -->
        <!--Previously, the robot_state_publisher helped build the tf tree based on the URDF file. -->
        <!--But it didn't extend that tree by linking in the 'map' frame. -->
        <!--The amcl package does that automatically by linking the 'map' and 'odom' frames.-->
        <param name="odom_frame_id" value="odom"/>
        <param name="base_frame_id" value="robot_footprint"/>
        <param name="global_frame_id" value="map"/>

        <!-- Specifies the delay in transform (tf) data that is tolerable in seconds. -->
        <!-- This parameter serves as a safeguard to losing a link in the tf tree while -->
        <!-- still allowing an amount of latency the user is comfortable with to exist in the system.-->
        <!-- ~transform_tolerance (double, default: 0.2 seconds)-->
        <param name="transform_tolerance" value="0.2"/>
        <param name="update_min_d" value="0.01"/>
        <param name="update_min_a" value="0.01"/>
		<param name="min_particles" value="10"/>
		<param name="max_particles" value="100"/>
		<param name="initial_pose_x" value="0.0"/>
		<param name="initial_pose_y" value="0.0"/>
		<param name="initial_pose_a" value="0.0"/>



        <!-- <param name="odom_alpha1" value="0.05"/>
        <param name="odom_alpha2" value="0.05"/>
        <param name="odom_alpha3" value="0.01"/>
        <param name="odom_alpha4" value="0.05"/> -->

        <!-- <param name="" value=""/> -->
        <param name="laser_model_type" value="likelihood_field"/>
        <!-- <param name="laser_likelihood_max_dist" value="4.0"/> -->
        <!-- <param name="laser_z_hit" value="0.95"/> -->
        <!-- <param name="laser_z_rand" value="0.05"/> -->
        <param name="laser_min_range" value="0.4"/>
        <!-- <param name="laser_max_range" value=""/> -->
    </node>





    <!-- move_base pkg offers navigation tools needed to define a path for the robot -->
    <!-- Utilizes a dynamic costmap, and has built-in corrective behaviors and maneuvers-->
    <!-- Example, if robot is stuck, it will automatically perform a recovery maneuver -->
    <node pkg="move_base" type="move_base" name="move_base" respawn="false" clear_params="true" output="screen">
        <rosparam command="load" file="$(find udacity_bot)/config/move_base_params.yaml"/>
        <!-- <param name="planner_frequency" value="5"/> -->
        <param name="planner_frequency" value="5"/>

        <!--Global Planner-->
        <!-- <param name="base_global_planner" type="string" value="global_planner/GlobalPlanner"/> -->
        <param name="base_global_planner" type="string" value="navfn/NavfnROS"/>
        <!-- <rosparam command="load" file="$(find udacity_bot)/config/base_global_planner_params.yaml"/> -->
        <rosparam command="load" file="$(find udacity_bot)/config/costmap_common_params.yaml" ns="global_costmap"/>
        <rosparam command="load" file="$(find udacity_bot)/config/global_costmap_params.yaml"/>

        <!--Local Planner-->
        <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
        <rosparam command="load" file="$(find udacity_bot)/config/base_local_planner_params.yaml"/>
        <rosparam command="load" file="$(find udacity_bot)/config/costmap_common_params.yaml" ns="local_costmap"/>
        <rosparam command="load" file="$(find udacity_bot)/config/local_costmap_params.yaml"/>

        <remap from="scan" to="udacity_bot/laser/scan"/>
        <!-- Why are these necessary? -->
        <remap from="cmd_vel" to="cmd_vel"/>
        <remap from="odom" to="odom"/>
    </node>

</launch>


<!--Rviz-->

<!--“odom” for fixed frame-->

<!--add “Map” > topic/map-->
<!--The second and third topics in the list will show the global costmap, and the local costmap. -->
<!--Both can be helpful to tune your parameters.-->

<!--add “PoseArray” > topic /particlecloud to display a set of arrows around the robot.-->
